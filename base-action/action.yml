# Static information for this action template
# Source: https://github.com/GitTools/actions
name: ".NET Test"
description: "Build and test a dotnet project"

# Inputs (parameters) for this action
inputs:
  dotnet-version:
    description: The dotnet version of the project to build and test.
    required: false
    default: 6.0.x
  docker_registry_username:
    description: "Username for docker image registry"
    required: false
  docker_registry_password:
    description: "Password for docker image registry"
    required: false
  docker_file:
    description: "name of the dockerfile to use. Default: Dockerfile"
    required: false
    default: "Dockerfile"
  nuget_api_source:
    description: "NuGet server uri hosting the packages"
    required: false
    default: "https://api.nuget.org"
  nuget_api_key:
    description: "API key to authenticate with NuGet server"
    required: false
    default: ''
  
# Steps to run
runs:
  using: "composite"
  
  steps:
    ### Checkout repo
    - uses: actions/checkout@v3

    ### Build and test all projects
    - name: .NET Test
      uses: gvdmeijde/githubactions/dotnet-build-test@main
      with:
        test-output: "test-results.trx"

    ### Get version number
    - name: Get version
      id: get_version
      uses: gvdmeijde/githubactions/gitversion@main

    ### Publish nugets    
    - name: Get NuGet projects
      id: get_nuget_projects
      uses: Rishabh510/Path-lister-action@master
      with:
        path: "/"
        type: ".NuGet.csproj"

    - name: Print detected NuGet projects
      shell: bash
      run: |
        echo "Found ${{ steps.get_nuget_projects.outputs.path_count }} file(s) with this extension:"
        for i in ${{ steps.get_nuget_projects.outputs.paths }}; do
        echo $i
        done

    - name: publish on version change
      if: success() && ${{ github.event.inputs.nuget_api_key != '' }}
      id: publish_nuget
      uses: rohith/publish-nuget@v2
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: ${{ steps.get_nuget_projects.outputs.paths }}
        # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
        VERSION_STATIC: ${{ steps.gitversion.outputs.semVer }}
        # API key to authenticate with NuGet server
        NUGET_KEY: ${{ github.event.inputs.nuget_api_key }}
        # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        NUGET_SOURCE: ${{ github.event.inputs.nuget_api_source }}
          

    ### Build and publish SimpleWebServer image to dockerhub
    - name: docker build
      if: success() && "${{ github.event.inputs.docker_registry_username != '' }}" && "${{ github.event.inputs.docker_registry_password != '' }}"
      uses: gvdmeijde/githubactions/publish-docker@main
      with:
        registry_username: "${{ inputs.docker_registry_username }}"
        registry_password: "${{ inputs.docker_registry_password }}"
        image_name: "simplefileserver"
        tag: "{{ steps.gitversion.outputs.semVer }}"
        docker_file: "${{ inputs.docker_file }}"
