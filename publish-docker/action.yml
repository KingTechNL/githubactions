# Static information for this action template
name: "Publish docker"
description: "Build a container image and Pushes it to Docker registry"

# Inputs (parameters) for this action
inputs:
  registry_username:
    description: "Username for image registry"
    required: true
  registry_password:
    description: "Password for image registry"
    required: true
  image_name:
    description: "Name of the image to push"
    required: true
  tags: 
    description: "How to tag the image. Tags are delimited with ; Default: latest" 
    required: false
    default: "latest"
  docker_file:
    description: "name of the dockerfile to use. Default: Dockerfile"
    required: false
    default: "Dockerfile"

runs:
  using: "composite"
  steps:
    # Print a summary
    - name: Summary
      shell: bash
      run: |
        echo "Building docker image ${{ inputs.image_name }}  with tags ${{ inputs.tags }}"
        
    # Print folder structure
    - name: list directory
      shell: bash
      run: find . | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"

    # Login to docker registery (DockerHub) and push image
    - name: Login to Docker registery
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    # Create docker buildx environment
    - name: create docker buildx
      shell: bash
      run: docker buildx create --name multiarch --driver docker-container --use

    # Create all the tag parameters for the docker image
    - name: create tag parameters
      shell: bash
      run: |
        IFS=';' read -r -a tag_array <<< "${{ inputs.tags }}"
        for t in "${tag_array[@]}"; do
          echo tagging image with $t
          TAGS=${TAGS:+$TAGS }--tag" ${{ inputs.registry_username }}/${{inputs.image_name}}:$t"
        done
        echo complete tag parameter: $TAGS
        echo "DOCKER_TAGS=$TAGS" >> $GITHUB_ENV

    # Build and publish the docker image
    - name: docker build
      shell: bash
      run: docker buildx build --no-cache --platform linux/amd64,linux/arm64 ${{ env.DOCKER_TAGS }} --push . -f ${{inputs.docker_file}}
