# Static information for this action template
name: "Publish docker"
description: "Build a container image and Pushes it to Docker registry"

# Inputs (parameters) for this action
inputs:
  registry_username:
    description: "Username for image registry"
    required: true
  registry_password:
    description: "Password for image registry"
    required: true
  image_name:
    description: "Name of the image to push"
    required: true
  tags: 
    description: "How to tag the image. Tags are delimited with ; Default: latest" 
    required: false
    default: "latest"
  docker_file:
    description: "name of the dockerfile to use. Default: Dockerfile"
    required: false
    default: "Dockerfile"

runs:
  using: "composite"
  steps:
    #Print a summary
    - name: Summary
      shell: bash
      run: |
        echo "Building docker image ${{ inputs.image_name }}:${{ inputs.tags }}"
        
    # Print folder structure
    - name: list directory
      shell: bash
      run: find . | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"

    # Build the docker image
    - name: docker build
      shell: bash
      run: docker build . -f ${{inputs.docker_file}} --tag ${{ inputs.registry_username }}/${{inputs.image_name}}:${{inputs.tags}}

    # Apply all tags to docker image
    - name: tag image
      shell: bash
      run: |
        IFS=';' read -r -a tag_array <<< "${{ inputs.tags }}"
        for t in tag_array; do
          echo "echo tagging image with ${{t}}"
          echo "docker image tag ${{ inputs.image_name }} ${{ inputs.registry_username }}/${{inputs.image_name}}:${{t}}"
        done

    #Login to docker registery and push image
    - name: Login to Docker registery
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - name: docker push
      shell: bash
      if: success()
      run: docker push --all-tags ${{ inputs.registry_username }}/${{inputs.image_name}}
